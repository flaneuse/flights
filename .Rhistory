# Exploring passenger airline dataset ----------------------------------------
# Laura Hughes, laura.d.hughes@gmail.com
# 19 June 2016
# (c) 2016 via MIT License
# import data -------------------------------------------------------------
library(dplyr)
library(readxl)
library(tidyr)
library(ggplot2)
airports = read_excel('data/airports new.xlt')
airports = read_excel('data/airports new.xls')
View(airports)
carriers = read_excel('data/carriers.xls')
View(carriers)
flights = read.csv('data/On_Time_On_Time_Performance_2016_1.csv')
tbl_df(flights)
range(flights$Year)
range(flights$Month)
colnames(flights)
View(flights  %>% group_by(DestCityName) %>% summarise(mean(TaxiIn))
)
View(flights  %>% group_by(DestAirportID) %>% summarise(tot = mean(TaxiIn, na.rm = T)) %>% arrange(desc(tot)))
View(flights  %>% group_by(DestCityName,DestAirportID) %>% summarise(tot = mean(TaxiIn, na.rm = T)) %>% arrange(desc(tot)))
View(flights  %>% group_by(DestCityName,DestAirportID) %>% summarise(tot = mean(TaxiIn, na.rm = T)) %>% ungroup() %>% arrange(desc(tot)))
View(flights  %>% group_by(DestCityName,DestAirportID) %>% summarise(tot = mean(TaxiIn, na.rm = T), n()) %>% ungroup() %>% arrange(desc(tot)))
# Exploring passenger airline dataset ----------------------------------------
# Laura Hughes, laura.d.hughes@gmail.com
# 19 June 2016
# (c) 2016 via MIT License
# import data -------------------------------------------------------------
library(dplyr)
library(readxl)
library(tidyr)
library(ggplot2)
# -- Individual Flight On-Time Arrivals --
# Flight on-time data from the U.S. Bureau of Transportation Statistics
# http://www.transtats.bts.gov/DL_SelectFields.asp?Table_ID=236&DB_Short_Name=On-Time
# Downloaded 19 June 2016
flights = read.csv('data/On_Time_On_Time_Performance_2016_1.csv')
# -- Airport location data, provided by Spotify --
airports = read_excel('data/airports new.xls')
# -- Carrier codes, provided by Spotify --
carriers = read_excel('data/carriers.xls')
fl1987 = read.csv('data/1987_01.csv')
fl1992 = read.csv('data/1992_01.csv')
colnames(fl1992)
levels(fl1992$Origin)
dc92 = fl1992 %>% filter(Origin %in% c('DCA', 'IAD') | Dest %in% c('DCA', 'IAD'))
dc16 = flights %>% filter(Origin %in% c('DCA', 'IAD') | Dest %in% c('DCA', 'IAD'))
dc92 = fl1992 %>% filter(Origin %in% c('DCA', 'IAD') )
dc16 = flights %>% filter(Origin %in% c('DCA', 'IAD'))
dc92 %>% group_by(Origin) %>%
summarise(n())
dc16 %>% group_by(Origin) %>%
summarise(n())
dc92 = fl1992 %>% filter(Dest %in% c('DCA', 'IAD') )
dc16 = flights %>% filter(Dest %in% c('DCA', 'IAD'))
dc16 %>% group_by(Origin) %>%
summarise(n())
dc16 %>% group_by(Dest) %>%
summarise(n())
dc92 %>% group_by(Dest) %>%
summarise(n())
dc92 = fl1992 %>% filter(Dest %in% c('LHR') )
fl1992 = read.csv('data/1059549560_T_T100_SEGMENT_ALL_CARRIER.csv')
dc92 = fl1992 %>% filter(Dest %in% c('DCA', 'IAD') )
colnames(fl1992)
dc92 = fl1992 %>% filter(DEST %in% c('DCA', 'IAD') )
dc92 %>% group_by(Dest) %>%
summarise(n())
dc92 %>% group_by(DEST) %>%
summarise(n())
View(dc92)
flightFiles = list.files('data/', pattern = '*.csv')
flightFiles = flightFiles[1:2]
flightFiles
readFlights = function(fileName) {
flightData = read.csv(fileName)
# -- Filter just the data from the interesting airports
flightData = flightData %>%
filter(Origin %in% airportCodes | Dest %in% airportCodes)
}
flights = readFlights('data/On_Time_On_Time_Performance_2016_1.csv')
readFlights = function(fileName) {
flightData = read_csv(fileName)
# -- Filter just the data from the interesting airports
flightData = flightData %>%
filter(Origin %in% airportCodes | Dest %in% airportCodes)
}
flights = readFlights('data/On_Time_On_Time_Performance_2016_1.csv')
library(readr)
flights = readFlights('data/On_Time_On_Time_Performance_2016_1.csv')
airportCodes = c('DCA', 'IAD', 'BWI')
readFlights = function(fileName, airportCodes) {
flightData = read_csv(fileName)
# -- Filter just the data from the interesting airports
flightData = flightData %>%
filter(Origin %in% airportCodes | Dest %in% airportCodes)
}
flights = readFlights('data/On_Time_On_Time_Performance_2016_1.csv', airportCodes)
readFlights = function(fileName, airportCodes) {
flightData = read_csv(fileName)
# -- Filter just the data from the interesting airports
flightData = flightData %>%
filter(Origin %in% airportCodes | Dest %in% airportCodes)
}
flights = readFlights('data/On_Time_On_Time_Performance_2016_1.csv', airportCodes)
readFlights = function(fileName, x) {
flightData = read_csv(fileName)
# -- Filter just the data from the interesting airports
flightData = flightData %>%
filter(Origin %in% x | Dest %in% x)
}
readFlights()
flights = readFlights('data/On_Time_On_Time_Performance_2016_1.csv', airportCodes)
# Exploring passenger airline dataset ----------------------------------------
# Question: is Ronald Reagan National Airport stealing domestic passengers from
# other area airports?
# Laura Hughes, laura.d.hughes@gmail.com
# 19 June 2016
# (c) 2016 via MIT License
# setup libraries, global variables ---------------------------------------
library(dplyr)
library(readxl)
library(tidyr)
library(ggplot2)
library(readr)
airportCodes = c('DCA', 'IAD', 'BWI')
# import data -------------------------------------------------------------
# -- Airport location data, provided by Spotify --
airports = read_excel('data/airports new.xls')
# -- Carrier codes, provided by Spotify --
carriers = read_excel('data/carriers.xls')
# -- Individual Flight On-Time Arrivals --
# Flight on-time data from the U.S. Bureau of Transportation Statistics
# http://www.transtats.bts.gov/DL_SelectFields.asp?Table_ID=236&DB_Short_Name=On-Time
# Downloaded 20 June 2016
# All individual file names w/ flight data (ea. year, month)
flightFiles = list.files('data/', pattern = '*.csv')
flightFiles = flightFiles[1:2]
readFlights = function(fileName, x) {
flightData = read_csv(fileName)
# -- Filter just the data from the interesting airports
flightData = flightData %>%
filter(Origin %in% x | Dest %in% x)
}
flights = readFlights('data/On_Time_On_Time_Performance_2016_1.csv', airportCodes)
flights = lapply(flightFiles, function(x) readFlights(x, airportCodes)
)
flightFiles = list.files('data/', pattern = '*.csv', full.names = TRUE)
flightFiles = list.files('data/', pattern = '*.csv', include.dirs = TRUE)
flightFiles = list.files('data/', pattern = '*.csv', full.names =  = TRUE)
flightFiles = list.files('data/', pattern = '*.csv', full.names =  TRUE)
flightFiles
flightFiles = flightFiles[1:2]
flights = lapply(flightFiles, function(x) readFlights(x, airportCodes))
x = row_bind(flights)
x = bind_rows(flights)
head(flights)
x = df2 = do.call(rbind, flights)
flightList = lapply(flightFiles, function(x) readFlights(x, airportCodes))
flights = bind_rows(flightList)
flights = do.call(rbind, flightList)
colnames(flights)
colnames(flights)
cols2Keep = c('Year', 'Quarter', 'Month')
readFlights = function(fileName, airports, vars) {
flightData = read_csv(fileName)
# -- Filter just the data from the interesting airports
# (and get rid of irrelevant columns)
flightData = flightData %>%
filter(Origin %in% airports | Dest %in% airports) %>%
select_(vars)
}
flightList = lapply(flightFiles, function(x) readFlights(x, airportCodes))
readFlights = function(fileName, airports, vars = cols2Keep) {
flightData = read_csv(fileName)
# -- Filter just the data from the interesting airports
# (and get rid of irrelevant columns)
flightData = flightData %>%
filter(Origin %in% airports | Dest %in% airports) %>%
select_(vars)
}
flightList = lapply(flightFiles, function(x) readFlights(x, airportCodes))
glimpse(x)
x = x %>%
select(Year, Quarter, Month,
DayofMonth, DayOfWeek, FlightDate,
UniqueCarrier, Origin, OriginCityName, OriginState,
Dest, DestCityName, DestState,
CRSDepTime, DepTime, DepDelay, DepDel15,
TaxiOut, WheelsOff, WheelsOn, TaxiIn,
CRSArrTime, ArrTime, ArrDelay, ArrDel15,
Cancelled, CancellationCode, Diverted, AirTime,
Flights, Distance, CarrierDelay, WeatherDelay,
NASDelay, SecurityDelay, LateAircraftDelay)
# Exploring passenger airline dataset ----------------------------------------
# Question: is Ronald Reagan National Airport stealing domestic passengers from
# other area airports?
# Laura Hughes, laura.d.hughes@gmail.com
# 19 June 2016
# (c) 2016 via MIT License
# setup libraries, global variables ---------------------------------------
library(dplyr)
library(readxl)
library(tidyr)
library(ggplot2)
library(readr)
airportCodes = c('DCA', 'IAD', 'BWI')
# import data -------------------------------------------------------------
# -- Airport location data, provided by Spotify --
airports = read_excel('data/airports new.xls')
# -- Carrier codes, provided by Spotify --
carriers = read_excel('data/carriers.xls')
# -- Individual Flight On-Time Arrivals --
# Flight on-time data from the U.S. Bureau of Transportation Statistics
# http://www.transtats.bts.gov/DL_SelectFields.asp?Table_ID=236&DB_Short_Name=On-Time
# Downloaded 20 June 2016
# All individual file names w/ flight data (ea. year, month)
flightFiles = list.files('data/', pattern = '*.csv', full.names =  TRUE)
readFlights = function(fileName, airports) {
flightData = read_csv(fileName)
# -- Filter just the data from the interesting airports
# (and get rid of irrelevant columns)
flightData = flightData %>%
filter(Origin %in% airports | Dest %in% airports) %>%
select(Year, Quarter, Month,
DayofMonth, DayOfWeek, FlightDate,
UniqueCarrier, Origin, OriginCityName, OriginState,
Dest, DestCityName, DestState,
CRSDepTime, DepTime, DepDelay, DepDel15,
TaxiOut, WheelsOff, WheelsOn, TaxiIn,
CRSArrTime, ArrTime, ArrDelay, ArrDel15,
Cancelled, CancellationCode, Diverted, AirTime,
Flights, Distance, CarrierDelay, WeatherDelay,
NASDelay, SecurityDelay, LateAircraftDelay)
}
# Read / filter the data from all the files
flightList = lapply(flightFiles, function(x) readFlights(x, airports = airportCodes, vars = cols2Keep))
# merge all the data together
# flights = bind_rows(flightList) # dplyr thinks my data frames are corrupt?! :(
flights = do.call(rbind, flightList)
# Exploring passenger airline dataset ----------------------------------------
# Question: is Ronald Reagan National Airport stealing domestic passengers from
# other area airports?
# Laura Hughes, laura.d.hughes@gmail.com
# 19 June 2016
# (c) 2016 via MIT License
# setup libraries, global variables ---------------------------------------
library(dplyr)
library(readxl)
library(tidyr)
library(ggplot2)
library(readr)
airportCodes = c('DCA', 'IAD', 'BWI')
# import data -------------------------------------------------------------
# -- Airport location data, provided by Spotify --
airports = read_excel('data/airports new.xls')
# -- Carrier codes, provided by Spotify --
carriers = read_excel('data/carriers.xls')
# -- Individual Flight On-Time Arrivals --
# Flight on-time data from the U.S. Bureau of Transportation Statistics
# http://www.transtats.bts.gov/DL_SelectFields.asp?Table_ID=236&DB_Short_Name=On-Time
# Downloaded 20 June 2016
# All individual file names w/ flight data (ea. year, month)
flightFiles = list.files('data/', pattern = '*.csv', full.names =  TRUE)
readFlights = function(fileName, airports) {
flightData = read_csv(fileName)
# -- Filter just the data from the interesting airports
# (and get rid of irrelevant columns)
flightData = flightData %>%
filter(Origin %in% airports | Dest %in% airports) %>%
select(Year, Quarter, Month,
DayofMonth, DayOfWeek, FlightDate,
UniqueCarrier, Origin, OriginCityName, OriginState,
Dest, DestCityName, DestState,
CRSDepTime, DepTime, DepDelay, DepDel15,
TaxiOut, WheelsOff, WheelsOn, TaxiIn,
CRSArrTime, ArrTime, ArrDelay, ArrDel15,
Cancelled, CancellationCode, Diverted, AirTime,
Flights, Distance, CarrierDelay, WeatherDelay,
NASDelay, SecurityDelay, LateAircraftDelay)
}
# Read / filter the data from all the files
flightList = lapply(flightFiles, function(x) readFlights(x, airports = airportCodes))
# merge all the data together
# flights = bind_rows(flightList) # dplyr thinks my data frames are corrupt?! :(
flights = do.call(rbind, flightList)
departures = flights %>%
filter(Origin %in% airportCodes)
arrivals = flights %>%
filter(Dest %in% airportCodes)
colnames(x)
colnames(flights)
flights %>%
filter(Dest %in% airportCodes) %>%
group_by(Dest, Year) %>%
summarise(num = n(), dist = mean(Distance),
div = mean(Diverted), time = mean(AirTime))
flights %>%
filter(Dest %in% airportCodes) %>%
group_by(Dest, Year) %>%
summarise(num = n(), dist = mean(Distance),
div = mean(Diverted),
cancelled = mean(Cancelled),
time = mean(AirTime, na.rm = TRUE))
# Exploring passenger airline dataset ----------------------------------------
# Question: is Ronald Reagan National Airport stealing domestic passengers from
# other area airports?
# Laura Hughes, laura.d.hughes@gmail.com
# 19 June 2016
# (c) 2016 via MIT License
# setup libraries, global variables ---------------------------------------
library(dplyr)
library(readxl)
library(tidyr)
library(ggplot2)
library(readr)
airportCodes = c('DCA', 'IAD', 'BWI')
# import data -------------------------------------------------------------
# -- Airport location data, provided by Spotify --
airports = read_excel('data/airports new.xls')
# -- Carrier codes, provided by Spotify --
carriers = read_excel('data/carriers.xls')
# -- Individual Flight On-Time Arrivals --
# Flight on-time data from the U.S. Bureau of Transportation Statistics
# http://www.transtats.bts.gov/DL_SelectFields.asp?Table_ID=236&DB_Short_Name=On-Time
# Downloaded 20 June 2016
# All individual file names w/ flight data (ea. year, month)
flightFiles = list.files('data/', pattern = '*.csv', full.names =  TRUE)
readFlights = function(fileName, airports) {
flightData = read_csv(fileName)
# -- Filter just the data from the interesting airports
# (and get rid of irrelevant columns)
flightData = flightData %>%
filter(Origin %in% airports | Dest %in% airports) %>%
select(Year, Quarter, Month,
DayofMonth, DayOfWeek, FlightDate,
UniqueCarrier, Origin, OriginCityName, OriginState,
Dest, DestCityName, DestState,
CRSDepTime, DepTime, DepDelay, DepDel15,
TaxiOut, WheelsOff, WheelsOn, TaxiIn,
CRSArrTime, ArrTime, ArrDelay, ArrDel15,
CRSElapsedTime, ActualElapsedTime,
Cancelled, CancellationCode, Diverted, AirTime,
Flights, Distance, CarrierDelay, WeatherDelay,
NASDelay, SecurityDelay, LateAircraftDelay)
}
# Read / filter the data from all the files
flightList = lapply(flightFiles, function(x) readFlights(x, airports = airportCodes))
# merge all the data together
# flights = bind_rows(flightList) # dplyr thinks my data frames are corrupt?! :(
flights = do.call(rbind, flightList)
# Basic descriptive stats on data -----------------------------------------
departures = flights %>%
filter(Origin %in% airportCodes)
arrivals = flights %>%
filter(Dest %in% airportCodes) %>%
group_by(Dest, Year) %>%
summarise(num = n(), dist = mean(Distance),
div = mean(Diverted),
cancelled = mean(Cancelled),
airtime = mean(AirTime, na.rm = TRUE))
arrivals = flights %>%
filter(Dest %in% airportCodes) %>%
group_by(Dest, Year) %>%
summarise(num = n(), dist = mean(Distance),
div = mean(Diverted),
cancelled = mean(Cancelled),
flightTime = mean(ActualElapsedTime),
airtime = mean(AirTime, na.rm = TRUE))
arrivals
subset = flights %>% slice(1:1000)
ggplot(subset, aes(x = CRSElapsedTime, y = ActualElapsedTime)) +
geom_point(size = 3, alpha = 0.2) +
theme_bw()
ggplot(subset, aes(x = AirTime, y = ActualElapsedTime)) +
geom_point(size = 3, alpha = 0.2) +
theme_bw()
ggplot(subset, aes(x = AirTime, y = ActualElapsedTime)) +
geom_point(size = 3, alpha = 0.2) +
theme_bw() +
coord_equal()
departures = flights %>%
filter(Origin %in% airportCodes) %>%
summarise(num = n(), dist = mean(Distance),
div = mean(Diverted),
cancelled = mean(Cancelled),
flightTime = mean(ActualElapsedTime),
airtime = mean(AirTime, na.rm = TRUE))
ggplot(arrivals, aes(x = Year, y = num, group = Dest)) +
geom_line() +
theme_bw() +
facet_wrap(~Dest)
flights  %>% group_by(Month) %>% summarise(n())
ym(paste0(2011, 1))
library(lubridate)
ym(paste0(2011, 1))
as.Date(paste0(2011, 1))
flights = do.call(rbind, flightList) %>%
mutate(yr_month = paste0(Year, Month))
arrivals = flights %>%
filter(Dest %in% airportCodes) %>%
group_by(Dest, year_month) %>%
summarise(num = n(), dist = mean(Distance),
div = mean(Diverted),
cancelled = mean(Cancelled),
flightTime = mean(ActualElapsedTime),
airtime = mean(AirTime, na.rm = TRUE))
arrivals = flights %>%
filter(Dest %in% airportCodes) %>%
group_by(Dest, yr_month) %>%
summarise(num = n(), dist = mean(Distance),
div = mean(Diverted),
cancelled = mean(Cancelled),
flightTime = mean(ActualElapsedTime),
airtime = mean(AirTime, na.rm = TRUE))
View(arrivals)
library(zoo)
as.yearmon(2001, 1)
flights = do.call(rbind, flightList) %>%
mutate(yr_month = zoo::as.yearmon(Year, Month))
departures = flights %>%
filter(Origin %in% airportCodes) %>%
group_by(Dest, yr_month) %>%
summarise(num = n(), dist = mean(Distance),
div = mean(Diverted),
cancelled = mean(Cancelled),
flightTime = mean(ActualElapsedTime),
airtime = mean(AirTime, na.rm = TRUE))
arrivals = flights %>%
filter(Dest %in% airportCodes) %>%
group_by(Dest, yr_month) %>%
summarise(num = n(), dist = mean(Distance),
div = mean(Diverted),
cancelled = mean(Cancelled),
flightTime = mean(ActualElapsedTime),
airtime = mean(AirTime, na.rm = TRUE))
ggplot(arrivals, aes(x = yr_mon, y = num, group = Dest)) +
geom_line() +
theme_bw() +
facet_wrap(~Dest)
ggplot(arrivals, aes(x = yr_month, y = num, group = Dest)) +
geom_line() +
theme_bw() +
facet_wrap(~Dest)
arrivals
View(airports)
28*12+9
load("~/GitHub/flights/data_out/collapsed_byAirline_2016-06-22.RData")
